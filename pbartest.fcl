// Andrei Gaponenko, 2015

#include "Mu2eG4/fcl/prolog.fcl"

BEGIN_PROLOG

pbars0out: {
   type: pdgId
   pars: [ -2212 ]  # stop and save pbars
   write: pbars0
}

// Energy cut on everything.  Very conservative: 2*m_proton.
pbars0EkCuts: {  type: kineticEnergy  cut: 1876. } // MeV

END_PROLOG
#include "fcl/standardProducers.fcl"

#include "TrkDiag/fcl/prolog.fcl"
#include "JobConfig/reco/mcdigis_primary.fcl"

# Give this job a name.
process_name : pbars0

source : {
   module_type : EmptyEvent
   maxEvents   : @nil
}

services : { @table::Services.SimAndReco

   message               : @local::default_message
   TFileService          : { fileName : "/mu2e/data/users/macndev/nts.owner.pbar_g4s0.version.sequencer.root" }
   RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }

   GeometryService        : { inputFile      : "JobConfig/common/geom_baseline.txt"    }
   ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
   GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
   G4Helper               : { }
   SeedService            : @local::automaticSeeds
}

services.scheduler.wantSummary: true

physics : {
    @table::physics
    producers : {
	@table::physics.producers
	@table::TrkAnaReco.producers
	@table::CaloDigiMC.producers
	@table::TrackerMC.producers
	@table::CrvDAQPackage.producers
	compressDigiMCs : @local::DigiCompression.Primary
	generate:   {
	    module_type : pbarStopTarg
	    physics : {
		genId : pbarStopTarg
		pdgId : -2212
	    }
	    elow : 0.1 // MeV
	    ehi : 0.2  // MeV 
	}  

	genCounter: { module_type : GenEventCounter }

	g4run : {
	    module_type       : Mu2eG4
	    physics           : @local::mu2eg4DefaultPhysics
	    ResourceLimits    : @local::mu2eg4DefaultResourceLimits
	    TrajectoryControl : @local::mu2eg4DefaultTrajectories
	    debug             : @local::mu2eg4DefaultDebug
	    visualization     : @local::mu2eg4NoVisualization

	    generatorModuleLabel : generate

	    SDConfig: {
		enableSD : [tracker, calorimeter, calorimeterRO, CRV, virtualdetector, protonabsorber] // activate just the explicitly listed SDs
		TimeVD   : { times: [] }
	    }

	    Mu2eG4StackingOnlyCut : @local::mu2eg4NoCut
	    // Mu2eG4 cuts are evaluated in the listed order.
	    // The first match wins.  For the "intersection"
	    // type, the first false stops the evaluation.
	    // For the "union" type the first true stops the evaluation.
	    Mu2eG4SteppingOnlyCut : {
		type: union pars: [
				   @local::pbars0out,
				   @local::pbars0EkCuts,
				   { type: notInVolume pars: [ "ProductionTarget" ] }
				  ]
	    }
	    Mu2eG4CommonCut : @local::mu2eg4NoCut

	    SimParticlePrinter : {
		enabled             : false
		primariesOnly       : false
		prefix              : "SimParticle: "
	    }

	}

	compressPV : {
	    module_type    : CompressPhysicalVolumes
	    volumesInput   : "g4run"
	    hitInputs      : []
	    particleInputs : [ "g4run" ]
	}    
	
	
    }

    analyzers : {
	@table::physics.analyzers
	@table::TrkAnaReco.analyzers
	genCountLogger : {
	    module_type : GenEventCountReader
	}
    }

    filters: {
	@table::physics.filters
	g4filter: {
	    module_type               : FilterG4Out
	    mainHitInputs             : [ "g4run:pbars0" ]
	    vetoDaughters             : []
	}
	g4status: {
	    module_type: FilterStatusG4
	    input: "g4run"
	}
    }

    # trigFilter    : [ generate, genCounter, g4run, compressPV, 
    # 		      @sequence::CommonMC.DigiSim,
    # 		      @sequence::CaloDigiMC.DigiSim, 
    # 		      @sequence::TrackerMC.DigiSim, 
    # 		      @sequence::CrvDAQPackage.CrvResponseSequence ]
    
    # trigger_paths : [ trigFilter ]

    e1        : [ genCountLogger, filteredOutput,  @sequence::TrkAnaReco.EndSequence ]
    end_paths : [ e1 ]
}

outputs: {
    @table::outputs
   filteredOutput     : {
      module_type    : RootOutput
      SelectEvents   : []
      outputCommands : [ "drop *_*_*_*",
			 "keep mu2e::GenParticles_*_*_*",
			 "keep mu2e::GenEventCount_*_*_*",
			 "keep mu2e::SimParticle*_*_*_*",
			 "keep mu2e::StatusG4_*_*_*",
			 "keep *_pbarWrite_*_*",
			 "keep *_compressPV_*_*"
			]
      fileName       : "/mu2e/data/users/macndev/sim.owner.pbar_s0.version.sequencer.art"
   }

   allOutput     : {
      module_type    : RootOutput
      SelectEvents   : []
      outputCommands : [ "keep *_*_*_*" ]
      fileName       : "/mu2e/data/users/macndev/sim.owner.pbar_s0_unfiltered.version.sequencer.art"
   }


}

physics.RecoPath : [ generate, genCounter, g4run, g4status, # compressPV, 
		     @sequence::CommonMC.DigiSim,
		     @sequence::CaloDigiMC.DigiSim, 
		     @sequence::TrackerMC.DigiSim, 
		     @sequence::CrvDAQPackage.CrvResponseSequence,
		     compressDigiMCs,
		     protonBunchIntensity , 
		     @sequence::Reconstruction.RecoPath, @sequence::TrkAnaReco.TrigSequence ]

physics.producers.g4run.physics.minRangeCut : 1.0 // mm
#physics.producers.g4run.physics.physicsListName: "FTFP_BERT_PBAR_MU2E02"

// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300

// Initialze seeding of random engines for an out-of-the-box test job.
// Grid jobs will overwrite this to use different seeds.
services.SeedService.baseSeed          : 8
services.SeedService.maxUniqueEngines  : 20

physics.producers.g4run.Mu2eG4SteppingOnlyCut : { }
physics.producers.g4run.Mu2eG4CommonCut : {  
   type: plane normal: [  0,  0, -1 ] point : [ 0, 0, -6500 ]
}
# physics.producers.g4run.Mu2eG4StackingOnlyCut : { 
#    type: union
#    pars: [
#       {type: intersection pars: [ 
# 	    {type: pdgId pars:  [ 2212,2112 ]}, 
# 	    {type: kineticEnergy cut: 4000.0} 
# 	 ] },
#       {type: intersection pars: [ 
# 	    {type: pdgId pars:  [ 211, -211 ]}, 
# 	    {type: kineticEnergy cut: 6000.0} 
# 	 ] },
#       {type: notPdgId pars:  [ 2212,2112, 211, -211 ]}
#    ]
# 
# }


services.GeometryService.simulatedDetector.tool_type : "Mu2e"
physics.producers.FindMCPrimary.GenParticles : generate
physics.producers.FindMCPrimary.SimParticles : g4run

# Include more information (MC, full TrkQual and TrkPID branches)
physics.analyzers.TrkAnaNeg.candidate.options : @local::AllOpt
physics.analyzers.TrkAnaPos.candidate.options : @local::AllOpt

# for hit level diagnostics, set diagLevel to 2
physics.analyzers.TrkAnaNeg.diagLevel : 1
physics.analyzers.TrkAnaNeg.FillMCInfo : false
physics.analyzers.TrkAnaNeg.AnalyzeCRV : false
physics.analyzers.TrkAnaNeg.FillTriggerInfo : false
physics.analyzers.TrkAnaPos.diagLevel : 1
physics.analyzers.TrkAnaPos.FillMCInfo : false
physics.analyzers.TrkAnaPos.AnalyzeCRV : false
physics.analyzers.TrkAnaPos.FillTriggerInfo : false
